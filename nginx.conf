events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers (matching your Vercel config)
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Resource-Policy "same-site" always;
        add_header Origin-Agent-Cluster "?1" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header X-DNS-Prefetch-Control "off" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|avif|webp)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Vary Accept-Encoding;
        }

        # Cache HTML files
        location ~* \.html$ {
            expires 0;
            add_header Cache-Control "public, max-age=0, must-revalidate";
        }

        # API routes (if needed)
        location /api/ {
            # Proxy to backend if needed
            # proxy_pass http://backend:3001;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            # For now, return 404 for API routes
            return 404;
        }

        # Admin routes (no caching)
        location /admin/ {
            expires 0;
            add_header Cache-Control "no-store, no-cache, must-revalidate, private";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri $uri/ /index.html;
        }

        # Handle React Router - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache HTML files
            expires 0;
            add_header Cache-Control "public, max-age=0, must-revalidate";
        }

        # Custom error pages
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

name: "iot-control-center"
version: "1.0.0"
description: "Comprehensive IoT control center integrating Philips Hue, Nest, Ring, IFTTT, Home Assistant, and SmartThings"
author: "BeamFlow Team"
license: "MIT"
dependencies: 
  - "node-hue-api"
  - "nest"
  - "ring-client-api"
  - "ifttt-maker"
  - "home-assistant-api"
  - "smartthings-nodejs"
  - "mqtt"
  - "socket.io"
  - "node-cron"

permissions: 
  - "plugin:iot-control-center:read"
  - "plugin:iot-control-center:write"
  - "plugin:iot-control-center:admin"

settings:
  hue_bridge_ip:
    type: "string"
    default: ""
    required: false
    description: "Philips Hue bridge IP address"
  
  hue_username:
    type: "string"
    default: ""
    required: false
    description: "Philips Hue bridge username"
    encrypted: true
  
  nest_client_id:
    type: "string"
    default: ""
    required: false
    description: "Nest client ID"
    encrypted: true
  
  nest_client_secret:
    type: "string"
    default: ""
    required: false
    description: "Nest client secret"
    encrypted: true
  
  nest_access_token:
    type: "string"
    default: ""
    required: false
    description: "Nest access token"
    encrypted: true
  
  ring_email:
    type: "string"
    default: ""
    required: false
    description: "Ring account email"
  
  ring_password:
    type: "string"
    default: ""
    required: false
    description: "Ring account password"
    encrypted: true
  
  ifttt_webhook_key:
    type: "string"
    default: ""
    required: false
    description: "IFTTT webhook key"
    encrypted: true
  
  home_assistant_url:
    type: "string"
    default: ""
    required: false
    description: "Home Assistant URL"
  
  home_assistant_token:
    type: "string"
    default: ""
    required: false
    description: "Home Assistant long-lived access token"
    encrypted: true
  
  smartthings_token:
    type: "string"
    default: ""
    required: false
    description: "SmartThings personal access token"
    encrypted: true
  
  mqtt_broker_url:
    type: "string"
    default: "mqtt://localhost:1883"
    required: false
    description: "MQTT broker URL"
  
  mqtt_username:
    type: "string"
    default: ""
    required: false
    description: "MQTT username"
    encrypted: true
  
  mqtt_password:
    type: "string"
    default: ""
    required: false
    description: "MQTT password"
    encrypted: true
  
  enable_hue:
    type: "boolean"
    default: true
    description: "Enable Philips Hue integration"
  
  enable_nest:
    type: "boolean"
    default: true
    description: "Enable Nest integration"
  
  enable_ring:
    type: "boolean"
    default: true
    description: "Enable Ring integration"
  
  enable_ifttt:
    type: "boolean"
    default: true
    description: "Enable IFTTT integration"
  
  enable_home_assistant:
    type: "boolean"
    default: true
    description: "Enable Home Assistant integration"
  
  enable_smartthings:
    type: "boolean"
    default: true
    description: "Enable SmartThings integration"
  
  enable_mqtt:
    type: "boolean"
    default: true
    description: "Enable MQTT integration"
  
  auto_discovery:
    type: "boolean"
    default: true
    description: "Enable automatic device discovery"
  
  scene_automation:
    type: "boolean"
    default: true
    description: "Enable scene automation"
  
  security_monitoring:
    type: "boolean"
    default: true
    description: "Enable security monitoring"
  
  energy_management:
    type: "boolean"
    default: true
    description: "Enable energy management"

hooks:
  - name: "onDeviceStateChange"
    description: "Process device state changes"
    priority: 10
    enabled: true
  
  - name: "onSecurityAlert"
    description: "Process security alerts"
    priority: 10
    enabled: true
  
  - name: "onAutomationTrigger"
    description: "Process automation triggers"
    priority: 5
    enabled: true

ui:
  navigation:
    enabled: true
    title: "IoT Control Center"
    icon: "home"
    path: "/plugins/iot-control-center"
    order: 70
    permissions: ["plugin:iot-control-center:read"]
  
  widgets:
    - name: "DeviceManagerWidget"
      description: "IoT device management"
      component: "DeviceManagerWidget"
      permissions: ["plugin:iot-control-center:read"]
    
    - name: "LightingControlWidget"
      description: "Smart lighting control"
      component: "LightingControlWidget"
      permissions: ["plugin:iot-control-center:write"]
    
    - name: "ClimateControlWidget"
      description: "Climate and HVAC control"
      component: "ClimateControlWidget"
      permissions: ["plugin:iot-control-center:write"]
    
    - name: "SecurityMonitorWidget"
      description: "Security monitoring and alerts"
      component: "SecurityMonitorWidget"
      permissions: ["plugin:iot-control-center:read"]
    
    - name: "AutomationWorkflowWidget"
      description: "Home automation workflows"
      component: "AutomationWorkflowWidget"
      permissions: ["plugin:iot-control-center:write"]
    
    - name: "EnergyMonitorWidget"
      description: "Energy usage monitoring"
      component: "EnergyMonitorWidget"
      permissions: ["plugin:iot-control-center:read"]

api:
  routes:
    - method: "GET"
      path: "/devices"
      handler: "getDevices"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "GET"
      path: "/devices/:id"
      handler: "getDevice"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "PUT"
      path: "/devices/:id"
      handler: "updateDevice"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "POST"
      path: "/devices/discover"
      handler: "discoverDevices"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/lights"
      handler: "getLights"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "PUT"
      path: "/lights/:id"
      handler: "updateLight"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "POST"
      path: "/lights/:id/toggle"
      handler: "toggleLight"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/climate"
      handler: "getClimateDevices"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "PUT"
      path: "/climate/:id"
      handler: "updateClimate"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/security"
      handler: "getSecurityDevices"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "GET"
      path: "/security/alerts"
      handler: "getSecurityAlerts"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "POST"
      path: "/security/arm"
      handler: "armSecurity"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "POST"
      path: "/security/disarm"
      handler: "disarmSecurity"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/scenes"
      handler: "getScenes"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "POST"
      path: "/scenes/activate"
      handler: "activateScene"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "POST"
      path: "/scenes/create"
      handler: "createScene"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/automations"
      handler: "getAutomations"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "POST"
      path: "/automations/create"
      handler: "createAutomation"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "PUT"
      path: "/automations/:id"
      handler: "updateAutomation"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "DELETE"
      path: "/automations/:id"
      handler: "deleteAutomation"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:write"]
    
    - method: "GET"
      path: "/energy/usage"
      handler: "getEnergyUsage"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "GET"
      path: "/energy/analytics"
      handler: "getEnergyAnalytics"
      middleware: ["auth"]
      permissions: ["plugin:iot-control-center:read"]
    
    - method: "POST"
      path: "/webhook/security"
      handler: "securityWebhook"
      middleware: []
      permissions: []
    
    - method: "POST"
      path: "/webhook/ifttt"
      handler: "iftttWebhook"
      middleware: []
      permissions: []

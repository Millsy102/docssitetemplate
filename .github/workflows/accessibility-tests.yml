name: Accessibility Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  accessibility-tests:
    name: Accessibility Testing
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint accessibility checks
        run: npm run lint

      - name: Run Jest accessibility tests
        run: npm run test:accessibility

      - name: Start development server
        run: npm run dev &

      - name: Wait for server to start
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:5173 > /dev/null; do sleep 1; done'

      - name: Run Playwright accessibility tests
        run: npm run test:accessibility:e2e

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-accessibility-results-${{ matrix.node-version }}
          path: test-results/
          retention-days: 7

  lighthouse-accessibility:
    name: Lighthouse Accessibility Audit
    runs-on: ubuntu-latest
    needs: accessibility-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start development server
        run: npm run dev &

      - name: Wait for server to start
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:5173 > /dev/null; do sleep 1; done'

      - name: Run Lighthouse accessibility audit
        run: npm run test:accessibility:lighthouse

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-accessibility-results
          path: lighthouse-results/
          retention-days: 30

  accessibility-report:
    name: Generate Accessibility Report
    runs-on: ubuntu-latest
    needs: [accessibility-tests, lighthouse-accessibility]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: playwright-accessibility-results-20.x
          path: playwright-results/

      - name: Download Lighthouse results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-accessibility-results
          path: lighthouse-results/

      - name: Generate accessibility report
        run: |
          echo "# Accessibility Test Results" > accessibility-report.md
          echo "" >> accessibility-report.md
          echo "## Test Summary" >> accessibility-report.md
          echo "- ESLint accessibility checks: ${{ needs.accessibility-tests.result }}" >> accessibility-report.md
          echo "- Jest accessibility tests: ${{ needs.accessibility-tests.result }}" >> accessibility-report.md
          echo "- Playwright E2E tests: ${{ needs.accessibility-tests.result }}" >> accessibility-report.md
          echo "- Lighthouse audit: ${{ needs.lighthouse-accessibility.result }}" >> accessibility-report.md
          echo "" >> accessibility-report.md
          echo "## Detailed Results" >> accessibility-report.md
          if [ -d "playwright-results" ]; then
            echo "### Playwright Test Results" >> accessibility-report.md
            find playwright-results -name "*.json" -exec echo "- {}" \; >> accessibility-report.md
          fi
          if [ -d "lighthouse-results" ]; then
            echo "### Lighthouse Results" >> accessibility-report.md
            find lighthouse-results -name "*.json" -exec echo "- {}" \; >> accessibility-report.md
          fi

      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: accessibility-report.md
          retention-days: 30

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('accessibility-report.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîç Accessibility Test Results\n\n${report}\n\n---\n*This report was automatically generated by the accessibility testing workflow.*`
            });
